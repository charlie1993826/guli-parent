d{yyyy-MM-dd} === [restartedMain] === INFO  === com.charlie.ApplicationPageHome === No active profile set, falling back to default profiles: default
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.springframework.cloud.context.scope.GenericScope === BeanFactory id=75f50b76-fce3-31d4-a642-12407a7a84f5
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker === Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bf548ee1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.s.boot.web.embedded.tomcat.TomcatWebServer === Tomcat initialized with port(s): 80 (http)
d{yyyy-MM-dd} === [restartedMain] === INFO  === org.apache.catalina.core.StandardService === Starting service [Tomcat]
d{yyyy-MM-dd} === [restartedMain] === INFO  === org.apache.catalina.core.StandardEngine === Starting Servlet engine: [Apache Tomcat/9.0.21]
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] === Initializing Spring embedded WebApplicationContext
d{yyyy-MM-dd} === [restartedMain] === INFO  === org.springframework.web.context.ContextLoader === Root WebApplicationContext: initialization completed in 1180 ms
d{yyyy-MM-dd} === [restartedMain] === WARN  === o.s.b.d.autoconfigure.OptionalLiveReloadServer === Unable to start LiveReload server
d{yyyy-MM-dd} === [restartedMain] === WARN  === com.netflix.config.sources.URLConfigurationSource === No URLs will be polled as dynamic configuration sources.
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.config.sources.URLConfigurationSource === To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
d{yyyy-MM-dd} === [restartedMain] === WARN  === com.netflix.config.sources.URLConfigurationSource === No URLs will be polled as dynamic configuration sources.
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.config.sources.URLConfigurationSource === To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.s.scheduling.concurrent.ThreadPoolTaskExecutor === Initializing ExecutorService 'applicationTaskExecutor'
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.s.cloud.netflix.eureka.InstanceInfoFactory === Setting initial instance status as: STARTING
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Initializing Eureka in region us-east-1
d{yyyy-MM-dd} === [restartedMain] === INFO  === c.n.discovery.provider.DiscoveryJerseyProvider === Using JSON encoding codec LegacyJacksonJson
d{yyyy-MM-dd} === [restartedMain] === INFO  === c.n.discovery.provider.DiscoveryJerseyProvider === Using JSON decoding codec LegacyJacksonJson
d{yyyy-MM-dd} === [restartedMain] === INFO  === c.n.discovery.provider.DiscoveryJerseyProvider === Using XML encoding codec XStreamXml
d{yyyy-MM-dd} === [restartedMain] === INFO  === c.n.discovery.provider.DiscoveryJerseyProvider === Using XML decoding codec XStreamXml
d{yyyy-MM-dd} === [restartedMain] === INFO  === c.n.d.shared.resolver.aws.ConfigClusterResolver === Resolving eureka endpoints via configuration
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Disable delta property : false
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Single vip registry refresh property : null
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Force full registry fetch : false
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Application is null : false
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Registered Applications size is zero : true
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Application version is -1: true
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Getting all instance registry info from the eureka server
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === The response status is 200
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Starting heartbeat executor: renew interval is: 30
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.InstanceInfoReplicator === InstanceInfoReplicator onDemand update allowed rate per min is 4
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Discovery Client initialized at timestamp 1580799403258 with initial instances count: 0
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.s.c.n.e.serviceregistry.EurekaServiceRegistry === Registering application GULI-PAGEHOME with eureka with status UP
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.netflix.discovery.DiscoveryClient === Saw local status change event StatusChangeEvent [timestamp=1580799403261, current=UP, previous=STARTING]
d{yyyy-MM-dd} === [DiscoveryClient-InstanceInfoReplicator-0] === INFO  === com.netflix.discovery.DiscoveryClient === DiscoveryClient_GULI-PAGEHOME/page-8001: registering service...
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.s.boot.web.embedded.tomcat.TomcatWebServer === Tomcat started on port(s): 80 (http) with context path ''
d{yyyy-MM-dd} === [restartedMain] === INFO  === o.s.c.n.e.s.EurekaAutoServiceRegistration === Updating port to 80
d{yyyy-MM-dd} === [restartedMain] === INFO  === com.charlie.ApplicationPageHome === Started ApplicationPageHome in 3.805 seconds (JVM running for 4.434)
d{yyyy-MM-dd} === [DiscoveryClient-InstanceInfoReplicator-0] === INFO  === com.netflix.discovery.DiscoveryClient === DiscoveryClient_GULI-PAGEHOME/page-8001 - registration status: 204
d{yyyy-MM-dd} === [DiscoveryClient-CacheRefreshExecutor-0] === INFO  === com.netflix.discovery.DiscoveryClient === Disable delta property : false
d{yyyy-MM-dd} === [DiscoveryClient-CacheRefreshExecutor-0] === INFO  === com.netflix.discovery.DiscoveryClient === Single vip registry refresh property : null
d{yyyy-MM-dd} === [DiscoveryClient-CacheRefreshExecutor-0] === INFO  === com.netflix.discovery.DiscoveryClient === Force full registry fetch : false
d{yyyy-MM-dd} === [DiscoveryClient-CacheRefreshExecutor-0] === INFO  === com.netflix.discovery.DiscoveryClient === Application is null : false
d{yyyy-MM-dd} === [DiscoveryClient-CacheRefreshExecutor-0] === INFO  === com.netflix.discovery.DiscoveryClient === Registered Applications size is zero : true
d{yyyy-MM-dd} === [DiscoveryClient-CacheRefreshExecutor-0] === INFO  === com.netflix.discovery.DiscoveryClient === Application version is -1: false
d{yyyy-MM-dd} === [DiscoveryClient-CacheRefreshExecutor-0] === INFO  === com.netflix.discovery.DiscoveryClient === Getting all instance registry info from the eureka server
d{yyyy-MM-dd} === [DiscoveryClient-CacheRefreshExecutor-0] === INFO  === com.netflix.discovery.DiscoveryClient === The response status is 200
d{yyyy-MM-dd} === [AsyncResolver-bootstrap-executor-0] === INFO  === c.n.d.shared.resolver.aws.ConfigClusterResolver === Resolving eureka endpoints via configuration
d{yyyy-MM-dd} === [AsyncResolver-bootstrap-executor-0] === INFO  === c.n.d.shared.resolver.aws.ConfigClusterResolver === Resolving eureka endpoints via configuration
d{yyyy-MM-dd} === [AsyncResolver-bootstrap-executor-0] === INFO  === c.n.d.shared.resolver.aws.ConfigClusterResolver === Resolving eureka endpoints via configuration
d{yyyy-MM-dd} === [http-nio-80-exec-5] === INFO  === o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] === Initializing Spring DispatcherServlet 'dispatcherServlet'
d{yyyy-MM-dd} === [http-nio-80-exec-5] === INFO  === org.springframework.web.servlet.DispatcherServlet === Initializing Servlet 'dispatcherServlet'
d{yyyy-MM-dd} === [http-nio-80-exec-5] === INFO  === org.springframework.web.servlet.DispatcherServlet === Completed initialization in 11 ms
d{yyyy-MM-dd} === [http-nio-80-exec-2] === INFO  === com.netflix.config.ChainedDynamicProperty === Flipping property: guli-page.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
d{yyyy-MM-dd} === [http-nio-80-exec-2] === INFO  === com.netflix.util.concurrent.ShutdownEnabledTimer === Shutdown hook installed for: NFLoadBalancer-PingTimer-guli-page
d{yyyy-MM-dd} === [http-nio-80-exec-2] === INFO  === com.netflix.loadbalancer.BaseLoadBalancer === Client: guli-page instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=guli-page,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
d{yyyy-MM-dd} === [http-nio-80-exec-2] === INFO  === c.n.loadbalancer.DynamicServerListLoadBalancer === Using serverListUpdater PollingServerListUpdater
d{yyyy-MM-dd} === [http-nio-80-exec-2] === INFO  === c.n.loadbalancer.DynamicServerListLoadBalancer === DynamicServerListLoadBalancer for client guli-page initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=guli-page,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5ce3872f
d{yyyy-MM-dd} === [http-nio-80-exec-2] === ERROR === o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] === Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: guli-page] with root cause
com.netflix.client.ClientException: Load balancer does not have available server for client: guli-page
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:65) ~[spring-cloud-openfeign-core-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:108) ~[feign-core-10.1.0.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:78) ~[feign-core-10.1.0.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-10.1.0.jar:na]
	at com.sun.proxy.$Proxy77.findAll(Unknown Source) ~[na:na]
	at com.charlie.controller.PageClientController.index(PageClientController.java:28) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_221]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_221]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_221]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_221]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) ~[spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_221]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_221]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.21.jar:9.0.21]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_221]
d{yyyy-MM-dd} === [RMI TCP Connection(2)-127.0.0.1] === INFO  === o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin === Application shutdown requested.
d{yyyy-MM-dd} === [RMI TCP Connection(2)-127.0.0.1] === INFO  === o.s.c.n.e.serviceregistry.EurekaServiceRegistry === Unregistering application GULI-PAGEHOME with eureka with status DOWN
d{yyyy-MM-dd} === [RMI TCP Connection(2)-127.0.0.1] === WARN  === com.netflix.discovery.DiscoveryClient === Saw local status change event StatusChangeEvent [timestamp=1580800438932, current=DOWN, previous=UP]
d{yyyy-MM-dd} === [DiscoveryClient-InstanceInfoReplicator-0] === INFO  === com.netflix.discovery.DiscoveryClient === DiscoveryClient_GULI-PAGEHOME/page-8001: registering service...
d{yyyy-MM-dd} === [RMI TCP Connection(2)-127.0.0.1] === INFO  === o.s.scheduling.concurrent.ThreadPoolTaskExecutor === Shutting down ExecutorService 'applicationTaskExecutor'
d{yyyy-MM-dd} === [DiscoveryClient-InstanceInfoReplicator-0] === INFO  === com.netflix.discovery.DiscoveryClient === DiscoveryClient_GULI-PAGEHOME/page-8001 - registration status: 204
d{yyyy-MM-dd} === [RMI TCP Connection(2)-127.0.0.1] === INFO  === com.netflix.util.concurrent.ShutdownEnabledTimer === Shutdown hook removed for: NFLoadBalancer-PingTimer-guli-page
d{yyyy-MM-dd} === [RMI TCP Connection(2)-127.0.0.1] === INFO  === com.netflix.discovery.DiscoveryClient === Shutting down DiscoveryClient ...
d{yyyy-MM-dd} === [RMI TCP Connection(2)-127.0.0.1] === INFO  === com.netflix.discovery.DiscoveryClient === Unregistering ...
